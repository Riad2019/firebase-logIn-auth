[{"C:\\WebDevelopment\\project\\firebase-practise\\src\\index.js":"1","C:\\WebDevelopment\\project\\firebase-practise\\src\\App.js":"2","C:\\WebDevelopment\\project\\firebase-practise\\src\\reportWebVitals.js":"3","C:\\WebDevelopment\\project\\firebase-practise\\src\\firebase.config.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":5567,"mtime":1611704730617,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":501,"mtime":1611097676759,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"7tkfbf",{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\WebDevelopment\\project\\firebase-practise\\src\\index.js",[],["20","21"],"C:\\WebDevelopment\\project\\firebase-practise\\src\\App.js",["22","23","24","25","26","27"],"import logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { useState } from 'react';\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [newUser,setNewUser]=useState(false);\n  const [user,setUser]=useState(\n    {\n     \n      isSignedIn : false,\n      name:'',\n      email:'',\n      photo:'',\n      error:'',\n      success:false\n\n    }\n  )\n\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  const fbProvider = new firebase.auth.FacebookAuthProvider();\n    const signInHandle= ()=> {\n      firebase.auth()\n  .signInWithPopup(googleProvider)\n  .then(res =>{\n    const { displayName,photoURL,email}=res.user;\n    const signInUser ={\n      isSignedIn : true,\n      name : displayName,\n      photo : photoURL,\n      email : email\n    }\n    console.log(photoURL,displayName,email);\n    setUser(signInUser);\n\n    console.log(res);\n      })\n\n .catch(err =>{\n   console.log(err);\n   console.log(err.message )\n })\n    }\n const fbSignInHandle=()=>{\n\n  firebase\n  .auth()\n  .signInWithPopup(fbProvider)\n  .then((result) => {\n    //** @type {firebase.auth.OAuthCredential} */\n    var credential = result.credential;\n   // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n   var accessToken = credential.accessToken;\n            \n\n    // The signed-in user info.\n    var user = result.user;\n    console.log('fb user after sign In', user);\n\n   \n\n    // ...\n  })\n  .catch((error) => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // The email of the user's account used.\n    var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    var credential = error.credential;\n\n    // ...\n  });\n\n\n }\n\n\n const signOutHandle=()=>{\n  firebase.auth().signOut()\n  .then(res=>{\n    const signOutUser={\n      isSignedIn : false,\n      name:'',\n      email:'',\n      photo:''\n     \n    }\n    setUser(signOutUser)\n  })\n  .catch(err=>{\n    console.log(err);\n   console.log(err.message )\n  }\n    \n    )\n }\n const handleChange=(e)=>{\n      let isFormValid = true;\n      if(e.target.name==='email'){\n          isFormValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n         \n      }\n      if(e.target.name==='password'){\n          const isPasswordValid = e.target.value.length>6;\n          const passwordHasNumber =  /\\d{1}/.test(e.target.value)\n          isFormValid= isPasswordValid  && passwordHasNumber ;\n      }\n      if (isFormValid){\n        //[...cart,newItem]\n        const newUserInfo ={...user}\n        newUserInfo[e.target.name] = e.target.value;\n        setUser(newUserInfo);\n      }\n\n }\n const handleSubmit=(e)=>{\n   if(newUser && user.email && user.password){\n\n    firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n  .then(res => {\n    // Signed in \n    //var users = userCredential.user;\n    // ...\n    const newUserInfo ={...user}\n    newUserInfo.error='';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    updateUserName(user.name);\n  })\n  .catch(error => {\n    const newUserInfo={...user}\n    newUserInfo.error= error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n    // ..\n  });\n\n   }\n   if(!newUser && user.email && user.password ){\n        \n    firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n  .then(res => {\n    // Signed in\n    //var users = userCredential.user;\n    // ...\n    const newUserInfo ={...user}\n    newUserInfo.error='';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    console.log('sign In user info',res.user);\n\n  })\n  .catch((error) => {\n    const newUserInfo={...user}\n    newUserInfo.error= error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n\n\n\n   }\n   e.preventDefault();\n }\n\n const updateUserName=name=>{\n  var user = firebase.auth().currentUser;\n\n  user.updateProfile({\n    displayName: name,\n    \n  }).then(function() {\n    console.log('Updated..')\n  }).catch(function(error) {\n    console.log(error)\n  });\n }\n  return (\n    <div className=\"App\">\n      {\n             user.isSignedIn ?  <button onClick={signOutHandle}>Sign out</button>:\n             <button onClick={signInHandle}>Google Sign In</button>\n\n      }\n      <button onClick={fbSignInHandle} >Facebook sign In</button>\n       {\n            user.isSignedIn && <div>\n                <p> Welcome, {user.name}</p>\n                <p>your email : {user.email}</p>\n                <img src={user.photo} alt=\"\"/>\n\n            </div>\n                                  \n       }\n       <h1>Our Authentication</h1>\n      \n       <input type=\"checkbox\"onChange={()=>setNewUser(!newUser)} name =\"newUser\"/>\n        <label htmlFor=\"newUser\" >New User sign up</label>\n       <form onSubmit={handleSubmit}>\n         \n        \n        {newUser && <input type=\"text\" name=\"name\" onBlur={handleChange} placeholder=\"Your name\" />} \n         <br/>\n        <input type=\"text\" name=\"email\" onBlur={handleChange} placeholder=\"Enter your email address\" required/>\n        <br/>\n        <input type=\"password\" name=\"password\" onBlur={handleChange} placeholder=\"Enter your password\" required/>\n        <br/>\n        <input type=\"submit\" value={newUser ? 'sign up' : 'sign In'}/>\n\n\n       </form>\n       <p style={{color: 'red'}}>{user.error}</p>\n      {\n           user.success &&\n      <p style={{color: 'green'}}>User {newUser ? 'Created' : 'logged In'} Successfully</p>} \n    </div>\n  );\n}\n\nexport default App;\n","C:\\WebDevelopment\\project\\firebase-practise\\src\\reportWebVitals.js",[],"C:\\WebDevelopment\\project\\firebase-practise\\src\\firebase.config.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":59,"column":8,"nodeType":"34","messageId":"35","endLine":59,"endColumn":19},{"ruleId":"32","severity":1,"message":"37","line":72,"column":9,"nodeType":"34","messageId":"35","endLine":72,"endColumn":18},{"ruleId":"32","severity":1,"message":"38","line":73,"column":9,"nodeType":"34","messageId":"35","endLine":73,"endColumn":21},{"ruleId":"32","severity":1,"message":"39","line":75,"column":9,"nodeType":"34","messageId":"35","endLine":75,"endColumn":14},{"ruleId":"32","severity":1,"message":"40","line":77,"column":9,"nodeType":"34","messageId":"35","endLine":77,"endColumn":19},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]